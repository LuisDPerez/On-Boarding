<?xml version="1.0" encoding="UTF-8"?>
<policy xmlns="http://www.mulesoft.org/schema/mule/policy"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:spring="http://www.springframework.org/schema/beans"
        xmlns:mule="http://www.mulesoft.org/schema/mule/core"
        xmlns:mule-ss="http://www.mulesoft.org/schema/mule/spring-security"
        xmlns:ss="http://www.springframework.org/schema/security"
        xmlns:api-platform-gw="http://www.mulesoft.org/schema/mule/api-platform-gw"
        xsi:schemaLocation="http://www.mulesoft.org/schema/mule/policy http://www.mulesoft.org/schema/mule/policy/current/mule-policy.xsd
              http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
              http://www.mulesoft.org/schema/mule/spring-security http://www.mulesoft.org/schema/mule/spring-security/current/mule-spring-security.xsd
              http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-current.xsd
              http://www.mulesoft.org/schema/mule/api-platform-gw http://www.mulesoft.org/schema/mule/api-platform-gw/current/mule-api-platform-gw.xsd
              http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

    <pointcut>
        <!--
            This file is a policy template, in the final XML deployed to Mule
            the names surrounded by double bracket will be replaced with
            configuration parameters.
        -->
        <api-platform-gw:api-pointcut apiName="{{ apiName }}" apiVersion="{{ apiVersionName }}"/>
    </pointcut>

    <!-- 
        The before tag executes before your API flows. In this tag you can
        filter or manipulate the incoming message.
    -->
    <before>
        <mule:set-variable variableName="sizeBytes" value="Integer.parseInt({{ sizeParam }}) * 1024" />
        <!--
            When a message fails to satisfy the conditions specified by a
            filter, that filter returns a null value, which causes the
            processing of that particular message to halt. In other words,
            the message is rejected and undergoes no further processing.

        -->
        <mule:message-filter onUnaccepted="policyViolation">
            <mule:expression-filter expression="#[(Integer.parseInt({{ sizeParam }}) * 1024) >= Integer.parseInt(message.inboundProperties.'Content-Length')]" />
        </mule:message-filter>  
    </before>

    <!--
        The after is inserted after your API flows. With this tag you can
        manipulate the API response.

        Note that if the API flow is halted (ie. by a filter) the after
        tag will not run. In this example, the after tag is not executed
        when the message is filtered.
    -->
    <after>
        <mule:set-property propertyName="Custom-Header" value="Example Policy" />
    </after>

    <mule:processor-chain name="policyViolation">
        <mule:logger message="The custom policy filtered the message #[message.getId()] based on a it's size. It has to be smaller or equal to {{ query }}" level="DEBUG" />
        <mule:set-property propertyName="http.status" value="403"/>
        <mule:set-property propertyName="Content-Type" value="application/json"/>
        <mule:set-payload value='{ "error" : "{{ denied-message }}"}'/>
    </mule:processor-chain>
</policy>